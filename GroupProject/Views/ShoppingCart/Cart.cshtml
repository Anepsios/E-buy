@model GroupProject.ViewModel.ShoppingCartViewModel

@* OM: Maybe make this different from full page shopping cart?
    if not remember to update this page every time you update that one *@

<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script type="text/javascript">

    $(function () {
        // Document.ready -> link up remove event handler
        $(".RemoveLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                // Perform the ajax post
                var url = '@Url.Action("RemoveFromCart", "ShoppingCart")';
                $.post(url, { "id": recordToDelete }, function (data) {
                    // Successful requests get here
                    // Update the page elements
                    if (data.ItemCount == 0) {
                        // OM: fadeout product with 0 quantity
                        $('#row-' + data.DeleteId).fadeOut('slow');
                    } else {
                        // OM: Or just show new product quantity
                        $('#item-count-' + data.DeleteId).text(data.ItemCount);
                    }
                    $('#cart-total').text(data.CartTotal);
                    // OM: convert " character since it doesnt pass correctly in js from json
                    let updateMessage = GetUpdateMessage(data.Message);
                    $('#update-message').text(updateMessage);
                    $('#cart-status').text('Cart (' + data.CartCount + ')');
                    WaitAndFadeOut();
                });
            }
        });
    });

        // OM: this one is to be given to dynamically created cart items on its onclick attribute, since the above doesnt work with dynamically created elements for some reason
    function RemoveItem(itemToDelete) {
        if (itemToDelete != '') {
            // Perform the ajax post
            var url = '@Url.Action("RemoveFromCart", "ShoppingCart")';
            $.post(url, { "id": itemToDelete }, function (data) {
                // Update the page elements
                if (data.ItemCount == 0) {
                    // OM: fadeout product with 0 quantity
                    $('#row-' + data.DeleteId).fadeOut('slow');
                } else {
                    // OM: Or just show new product quantity
                    $('#item-count-' + data.DeleteId).text(data.ItemCount);
                }
                $('#cart-total').text(data.CartTotal);
                // OM: convert " character since it doesnt pass correctly in js from json
                let updateMessage = GetUpdateMessage(data.Message);
                $('#update-message').text(updateMessage);
                $('#cart-status').text('Cart (' + data.CartCount + ')');
                WaitAndFadeOut();
            });
        }
    }

    function GetUpdateMessage(updateMessage) {
        let message;
        if (updateMessage.includes('&quot;')) {
            message = updateMessage.split('&quot;');
            message = message[0] + '"' + message[1];
        }
        else {
            message = updateMessage;
        }
        return (message);
    }

    const delay = ms => new Promise(res => setTimeout(res, ms));
    async function WaitAndFadeOut() {
        await delay(1400);
        $('#update-message').fadeOut('slow');
        await delay(600);
        $('#update-message').empty();
        $('#update-message').fadeIn('fast');
    };

</script>

<h3>
    <em>Review</em> your items:
</h3>
<p>
    @Html.ActionLink("Pay With Paypal", "Index", "Checkout", null, new { @class = "btn btn-success" })
    @Html.ActionLink("Pay With Card", "CreditCard", "Checkout", null, new { @class = "btn btn-success" })
</p>
<div id="update-message">
</div>
<table id="cart-items">
    <thead>
        <tr>
            <th style="min-width:150px;">
                Product
            </th>
            <th style="min-width:100px;">
                Price
            </th>
            <th>
                Quantity
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="added-items">
        @foreach (var item in Model.CartItems)
        {
            <tr id="row-@item.ID">
                <td>
                    @Html.ActionLink(item.Product.Name, "Details", "Products", new { id = item.ProductID }, new { @class = "hyperlink" })
                </td>
                <td>
                    @item.Product.Price€
                </td>
                <td id="item-count-@item.ID">
                    @item.Quantity
                </td>
                <td>
                    <a href="javascript:void(0);" class="RemoveLink hyperlink" data-id="@item.ID">Remove from cart</a>
                </td>
            </tr>
        }
    </tbody>
    <tbody>
        <tr>
            <td>
                Total
            </td>
            <td>
            </td>
            <td>
            </td>
            <td id="cart-total">
                @Model.CartTotal€
            </td>
        </tr>
    </tbody>
</table>
