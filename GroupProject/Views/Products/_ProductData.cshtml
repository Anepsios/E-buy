@model PagedList.IPagedList<GroupProject.Models.Product>
@using PagedList.Mvc;

@{ ViewBag.Title = "Browse Products"; }


<link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/pricing/">
<link rel="stylesheet" href="~/Content/Site.css" />
<script type="text/javascript">

    @*$(function () {
        // Document.ready -> link up remove event handler
        $(".AddLink").click(function () {
            // Get the id from the link
            var productToAdd = $(this).attr("data-id");
            if (productToAdd != '') {
                // Perform the ajax post
                var url = '@Url.Action("AddToCartJson", "ShoppingCart")';
                $.post(url, { "id": productToAdd }, function (data) {
                    // Successful requests get here
                    // Update the page elements
                    if (data.ItemCount == 1) {
                        // OM: Append new line of item in cart here
                        $('#cart-items #added-items').after('<tr id="row-' + data.AddId + '"><td>' + '<a class = "hyperlink" href="@Url.Action("Details", "Products")">'
                            + data.Name + '</a>' + '</td><td>' + Number(data.Price).toFixed(2) + '€</td><td id="item-count-'
                            + data.AddId + '">1</td><td><button href="javascript:void(0);" class="RemoveLink closebtn" onclick="RemoveItem(' + data.AddId + ')" data-id="'
                            + data.AddId + '"><i class="fa fa-minus"></i></button> / <button href="javascript:void(0);" class="AddLink closebtn"><i class="fa fa-plus"></i></button></td></tr>');
                    } else {
                        // OM: Or just increase quantity of existing item here
                        $('#item-count-' + data.AddId).text(data.ItemCount);
                    }

                        $('#cart-total').text(Number(data.CartTotal).toFixed(2) + '€');
                    $('#cart-status').text(' (' + data.CartCount + ')');


                });
            }
        });
    });
    function handleUpdate() {
        // Load and deserialize the returned JSON data
        var json = context.get_data();
        var data = Sys.Serialization.JavaScriptSerializer.deserialize(json);
    }*@


</script>

<div class="container-fluid mx-auto text-center">

    @if (ViewBag.IsAdminOrEmployee)
    {
<p>
    @Html.ActionLink("Edit Product Categories", "Index", "Categories", "", new { @class = "btn btn-warning" })  &nbsp;
    @Html.ActionLink("Edit Product Manufacturers", "Index", "Manufacturers", "", new { @class = "btn btn-warning" }) &nbsp;
    @Html.ActionLink("Create New Product", "Create", "Products", "", new { @class = "btn btn-warning" })
</p>}

    @using (Html.BeginForm("Index", "Products", FormMethod.Get))
    {
<div class="SearchBox">
    <form>
        <div class="row d-flex justify-content-center">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, null, new { @class = "form-control col-sm", @placeholder = "Search for Products" })&nbsp;
            @Html.DropDownList("SelectedCategory", null, "All Categories", new { @class = "form-control col-sm", onchange = "this.form.submit();" })&nbsp;
            @Html.DropDownList("SelectedManufacturer", null, "All Manufacturers", new { @class = "form-control col-sm", onchange = "this.form.submit(); " })&nbsp;
        </div>
        <br />
        <input type="submit" value="Search" class="btn btn-success btn-sm" />
    </form>
</div>}

</div>
<br />
<p style="text-align:center">
    @Html.ActionLink("Sort by Price", "Index", new
    {
        sortOrder = ViewBag.SortParam,
        searchString = ViewBag.CurrentFilter,
        selectedCategory = ViewBag.CurrentCategory,
        selectedManufacturer = ViewBag.CurrentManufacturer
    }, new { @class = "hyperlink" })
    @if (ViewBag.Descending)
    {
@:(Currently Descending)
}
else
{
@:(Currently Ascending)
}
</p>

@if (ViewBag.ItemCount == 0)
{
<h3>Oops, we didn't find any of the products you're looking for :(</h3> }
            else
            {
<p>Showing @ViewBag.ItemCount items</p>}

<div class="row" id="productGrid">
    @foreach (var item in Model)
    {
<div class="col-lg-3 col-md-4 col-sm-6">
    <div class="product-grid">
        <div class="product-image">
            <a href='@Url.Action("Details", "Products", new { id = item.ID })'>
                <img src="@Url.Content(item.ProductImage)" alt="Image" class="pic-1" />
            </a>
            @if (ViewBag.IsUser)
            {
<button href="javascript:void(0);" class="bubbly-button AddLink social" data-id="@item.ID">
    <i class="cartA fa fa-shopping-cart"></i>
</button>}
            @if (item.Offer == true)
            {
<span class="product-new-label">Sale</span>
                    <span class="product-discount-label">-@Html.DisplayFor(Model => item.Discount)%</span>}
        </div>

        <div class="product-content">
            <ul class="rating">

                @{ if (item.Ratings.Where(x => x.IsApproved == true).ToList().Count > 0)
                                    {
                                        int sumAvg = Convert.ToInt32((from x in item.Ratings.Where(x => x.IsApproved == true) select x.Stars).Average());
                                        for (var i = 1; i <= sumAvg; i++)
                                        {
                    <li class="starOn"></li> }
                                        for (var i = sumAvg; i < 5; i++)
                                        {
                    <li class="starOff"></li> }
                                    }
                                    else
                                    {
                    <li>No ratings yet</li> } }
            </ul>
            <h3 class="title">@item.Manufacturer.Name @item.Name</h3>
            <div class="price">
                @item.Price€
                @if (item.Offer == true)
                {
<span class="badge badge-warning">@item.OldPrice€</span>}
            </div>
        </div>
    </div>
    <hr />
</div>}
</div>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
      new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, selectedCategory = ViewBag.CurrentCategory, selectedManufacturer = ViewBag.CurrentManufacturer }))
<script>
    $(document).ready(function () {
        $('.AddLink').on('click', function () {
            $('.cartA').removeClass('fa-shopping-cart');
            $('.cartA').addClass('fa-check');

        });
    });
    $(window).mouseleave(function () {
        $('.cartA').removeClass('fa-check');
        $('.cartA').addClass('fa-shopping-cart');
    });

    var animateButton = function (e) {

        e.preventDefault;
        //reset animation
        e.target.classList.remove('animate');

        e.target.classList.add('animate');
        setTimeout(function () {
            e.target.classList.remove('animate');
        }, 700);
    };

    var bubblyButtons = document.getElementsByClassName("bubbly-button");

    for (var i = 0; i < bubblyButtons.length; i++) {
        bubblyButtons[i].addEventListener('click', animateButton, false);
    }
</script>

